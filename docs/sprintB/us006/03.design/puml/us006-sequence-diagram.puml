@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US006 - Sequence Diagram (SSD)

autonumber

actor "Vehicle Fleet\n Manager" as VFM
participant ":RegisterVehicleUI" as UI
participant ":RegisterVehicleController" as CTRL
participant ":Repositories" as REPOS
participant "repositories:\nRepositories" as REPOSInstance
participant "vehicleRepository\n:VehicleRepository" as VehicleREPO
participant ":Vehicle" as Vehicle
participant ":Date" as Date

activate VFM

    VFM -> UI : asks to register a new vehicle
    activate UI

        UI -> CTRL** : creates
loop until typed data is valid
        UI --> VFM : Requests vehicle data (plateId, brand, model, type,\ntare, grossWeight, currentKm, registerDate,\nacquisitionDate, checkupFrequencyKms)

    deactivate UI

    VFM -> UI : types requested data
    activate UI

        UI --> UI : validates typed data
end loop
        UI -->UI : keepData(plateId, brand, model, type,\ntare, grossWeight, currentKm, registerDate,\nacquisitionDate, checkupFrequencyKms)
        UI --> VFM : show all data and requests confirmation

    deactivate UI

    VFM -> UI : confirms data
    activate UI

        UI -> CTRL: createVehicle(plateId, brand, model, type,\ntare, grossWeight, currentKm, registerDate,\nacquisitionDate, checkupFrequencyKms)
        activate CTRL

            CTRL --> CTRL : getVehicleRepository()
            activate CTRL

                CTRL -> REPOS : getInstance()
                activate REPOS

                    REPOS --> CTRL : repositories
                deactivate REPOS

                CTRL -> REPOSInstance : getVehicleRepository()
                activate REPOSInstance

                    REPOSInstance --> CTRL : vehicleRepository
                deactivate REPOSInstance
                CTRL --> CTRL : vehicleRepository
            deactivate CTRL

            CTRL -> VehicleREPO : createVehicle(plateId, brand, model, type,\ntare, grossWeight, currentKm, registerDate,\nacquisitionDate, checkupFrequencyKms)
            activate VehicleREPO

                VehicleREPO -> Vehicle** : new Vehicle(plateId, brand, model, type,\ntare, grossWeight, currentKm, registerDate,\nacquisitionDate, checkupFrequencyKms)

                    Vehicle --> Vehicle : validatePlateId(plateID)
                    Vehicle --> Vehicle : validateBrand(brand)
                    Vehicle --> Vehicle : validateModel(model)
                    Vehicle --> Vehicle : validateType(type)
                    Vehicle --> Vehicle : validateTare(tare)
                    Vehicle --> Vehicle : validateGrossWeight(grossWeight)
                    Vehicle --> Vehicle : validateCurrentKm(currentKm)
                    Vehicle --> Vehicle : validateRegisterDate(registerDate)
                    Vehicle -> Date** : new Date(registerDate)
                        Date --> Date : validateDate()
                    Vehicle --> Vehicle : validateAcquisitionDate(acquisitionDate)
                    Vehicle -> Date** : new Date(acquisitionDate)
                        Date --> Date : validateDate()
                    Vehicle --> Vehicle : validateCheckupFrequencyKms(checkupFrequencyKms)

                VehicleREPO --> VehicleREPO : add(vehicle)
                VehicleREPO --> VehicleREPO : validateVehicle()
                VehicleREPO --> CTRL : vehicle
            deactivate VehicleREPO

            CTRL --> UI : vehicle
        deactivate CTRL

        UI --> VFM : Display operation success

    deactivate UI

deactivate VFM



@enduml