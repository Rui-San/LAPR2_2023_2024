@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US007 - System Sequence Diagram (SSD)

autonumber

actor "Fleet Manager" as Employee
participant ":RegisterCheckupUI" as UI
participant ":RegisterCheckupController" as RCCtrl
'participant "taskCategoryRepository:\nTaskCategoryRepository" as TaskCategoryRepository
'participant ":ApplicationSession" as _APP
'participant "appSession\n:ApplicationSession" as APP
'participant "currentSession\n:UserSession" as SESSAO
'participant "vehicleRepository:\nVehicleRepository" as VehicleRepository
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "vehicleRepository\n:VehicleRepository" as VehicleRepository
participant ":vehicleCheckupRepository\n:VehicleCheckupRepository" as VCRepo
'participant "organizationRepository:\nOrganizationRepository" as OrganizationRepository
participant ":Vehicle Checkup" as VCheckup
participant "Date" as Date

activate Employee

    Employee -> UI : Asks to register a new vehicle's check-up
    activate UI

        UI -> RCCtrl** : create
        UI -> RCCtrl : getVehicleList()
        activate RCCtrl

            RCCtrl -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> RCCtrl : repositories
            deactivate RepositorySingleton
            RCCtrl -> PLAT : getVehicleRepository()
            activate PLAT

                PLAT --> RCCtrl : vehicleRepository
            deactivate PLAT
            RCCtrl -> VehicleRepository : getVehicles()
            activate VehicleRepository

                VehicleRepository --> RCCtrl : vehiclesList
            deactivate VehicleRepository
            RCCtrl --> UI : vehiclesList
        deactivate RCCtrl

        UI --> Employee : Shows the list of vehicles and asks to select one
    deactivate UI

    Employee -> UI : Selects a vehicle
    activate UI

        UI --> UI : keepsData(vehicle)
        UI --> Employee : Requests the date of the check-up\n and the current kilometers
    deactivate UI

    Employee -> UI : Types requested data
    activate UI

        UI --> UI : keepData(checkupDate, currentKms)
        UI --> Employee : Shows all data and requests confirmation
    deactivate UI

    Employee -> UI : Confirms data
    activate UI

        UI --> RCCtrl : registerVehicleCheckup(Vehicle, \nDate of check-up, \nCurrent kilometers)
        activate RCCtrl

            RCCtrl --> PLAT : getVehicleCheckupRepository()
            activate PLAT

                PLAT -> RCCtrl : VehicleCheckupRepository
            deactivate PLAT
            RCCtrl --> VCRepo : registerVehicleCheckup(vehicle, \checkupDate, \ncurrentKms)
            activate VCRepo

                VCRepo --> VCheckup** : VehicleCheckup(vehicle, checkupDate, currentKms)
                VCheckup -> Date : validateDate(checkupDate)
                VCheckup --> VCheckup : validateCurrentKms(currentKms)
                VCRepo --> VCRepo : addCheckup(vehicleCheckup)
                VCRepo --> VCRepo : validateCheckup(vehicleCheckup)
                VCRepo --> RCCtrl : operation Success
            deactivate VCRepo

            RCCtrl --> UI : operation Success
        deactivate RCCtrl

        UI --> Employee : Displays operation success
    deactivate UI

@enduml