@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0
title US024 - Class Diagram

package GUI <<Folder>> #DDDDDD {

class AgendaUI {
    - AgendaTaskDTO selectedTask
    + initialize(location, resources)
    - fillTaskTable()
    + btnCancelTask()
    - updateTableView()
    - validateSelectedTask(selectedTask)
}
}

package Controller <<Folder>> #DDDDDD {
class PostponeTaskController {
    - agendaRepository
    - vehicleRepository
    - teamRepository
    + getAgendaRepository()
    + getVehicleRepository()
    + getTeamRepository()
    + PostponeTaskController()
    + postponeTask(AgendaTaskDTO selectedTask, String selectedDate,int workStartingHours,int workStartingMinutes)
}

class AgendaController{
    + getAgendaTaskDTOManagerList()
}
}

'package Domain <<Folder>> #AAAAAA{
package Repository <<Folder>> #DDDDDD {
class TeamRepository{
    - List<Team> teamList

    + removeWorkPeriodFromTeam(canceledTask, taskWorkPeriod)
}

class VehicleRepository{
    + removeWorkPeriodFromVehicle(canceledTask, taskWorkPeriod)
}

class AgendaRepository{
    - List<Task> agenda

    + updateTaskToCanceled(title, greenSpace, executionDate, status)
}
class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getTeamRepository()
    + getAgendaRepository()
    + getVehicleRepository()
}

class ApplicationSession{
    - ApplicationSession()
    + getInstance() : ApplicationSession
    + getAuthenticationRepository()
    + getCurrentSession()

}

class UserSession{
    + getUserEmail()

}

class Email{

}

}


package Domain <<Folder>> #DDDDDD {
class Vehicle{
    + String plateId
    + String brand
    + String model
    + VehicleType type
    + double tare
    ...
    + removeWorkPeriodIfExists(oldWorkPeriod)
}


class Team {
    - List<Collaborator> members
    - List<WorkPeriod> workPeriods

    + removeWorkPeriodIfExists(workPeriod)
}

class Task {
    - String title;
    - String description;
    - TaskType taskType;
    - Status status;
    ...

    + Task(title, description, taskType, greenSpace,\nurgency, days, hours, minutes)
    (...)
}

class WorkPeriod{
    + Date workStartDate
    + int workStartHour
    + int workStartMin
    + Date workEndDate
    + int workEndHour
    + int workEndMin

}

class TaskDuration {
    - int days;
    - int hours;
    - int minutes;
    - int totalDurationMinutes;

    + TaskDuration(days, hours, minutes)
    + setTaskDuration(days, hours, minutes)
    - validateTaskDuration(days, hours, minutes)
}

'}
}


package Mapper <<Folder>> #DDDDDD {

class AgendaMapper{
    + AgendaMapper()
    + toDTO(agendaTask, teamDTO, List<VehicleDTO> vehicleDTOList)

}

}

package DTO <<Folder>> #DDDDDD {

class AgendaTaskDTO {
    + String title;
    + String description;
    + TaskType taskType;
    + String greenSpaceName;
    + UrgencyType urgency;
    + int expectedDuration;
    + String workStartDate;
    + int workStartHour;
    + int workStartMinutes;
    + Status status;
    + String isTeamAssigned;

    + AgendaTaskDTO(title, description, taskType, greenSpace,\nurgency, expectedDuration, executionDate, workStartHour,\nworkStartMinutes, status, isTeamAssigned, vehiclesAssigned,\nteamDTO, vehicleDTOList)

}

class CollaboratorDTO{
    + String collaboratorName;
    + String email;
    + List<String> skillNames;

    + CollaboratorDTO(collaborator)

    }

class TeamDTO{
    + List<CollaboratorDTO> collaborators
    + TeamDTO(List<CollaboratorDTO> teamMembers)
    }

class VehicleDTO{
    + String plateID;
    + String brand;
    + String model;
    + String type;

    +VehicleDTO(vehicle)

}

}




AgendaUI ..> AgendaController
AgendaUI ..> PostponeTaskController
AgendaController ...> Repositories
PostponeTaskController ..> Repositories
AgendaController .> ApplicationSession
ApplicationSession -> ApplicationSession : instance
ApplicationSession -down-> "1" UserSession : userSession
UserSession ..> Email
Repositories ---> "1" AgendaRepository
Repositories ---> "1" TeamRepository
Repositories ---> "1" VehicleRepository
AgendaRepository "1" -down-> Task : task
VehicleRepository "1" -down-> Vehicle : vehicle
Task *--"1" TaskDuration : taskDuration
TeamRepository "1" -> Team : team
AgendaController ..> AgendaRepository : agendaRepository
PostponeTaskController .> AgendaRepository : agendaRepository
PostponeTaskController ..> TeamRepository : teamRepository
PostponeTaskController ..> VehicleRepository : vehicleRepository
Repositories -> Repositories : instance
AgendaController ..right...> AgendaMapper
AgendaMapper ..> AgendaTaskDTO
AgendaTaskDTO ..> "1"TeamDTO
TeamDTO "1" ..> CollaboratorDTO
AgendaTaskDTO "1" ..> VehicleDTO
Vehicle "1" -down--> WorkPeriod : workperiod
Team "1" -down--> WorkPeriod : workperiod
Task "1" *---"1" WorkPeriod : workperiod

@enduml