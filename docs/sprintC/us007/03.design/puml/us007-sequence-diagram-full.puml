@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US007 - Sequence Diagram

autonumber

actor "Vehicle Fleet\n Manager" as VFM
participant ":RegisterCheckupUI" as UI
participant ":RegisterCheckupController" as CTRL
participant ":Repositories" as REPOS
participant "repositories\n:Repositories" as REPOSInstance
participant "vehicleRepository\n:VehicleRepository" as VehicleREPO
participant "checkupRepository\n:CheckupRepository" as CheckupREPO
participant ":Date" as Date
participant ":VehicleCheckup" as Checkup

activate VFM

    VFM -> UI : aks to register a new vehicle checkup
    activate UI

        UI -> CTRL** : create
        UI -> CTRL : getVehicles()
        activate CTRL

            CTRL -> REPOS : getInstance()
            activate REPOS

                REPOS --> CTRL : repositories
            deactivate REPOS

            CTRL -> REPOSInstance : getVehicleRepository
            activate REPOSInstance

                REPOSInstance --> CTRL : vehicleRepository
            deactivate REPOSInstance

            CTRL -> VehicleREPO : getVehicleList()
            activate VehicleREPO

                VehicleREPO --> CTRL : vehicleList
            deactivate VehicleREPO
            CTRL --> UI : vehicleList
        deactivate CTRL
loop until typed index is valid
        UI --> VFM : displays all vehicles and asks to\n select one by index
    deactivate UI

    VFM -> UI : types the index of the vehicle\n to register checkup
    activate UI
        UI --> UI : validateIndex(answer, numerOfVehicles)
end loop
        note right of UI
            saves the vehicle from vehicleList that
            is located in the typed index
        end note
        UI --> UI : KeepData(vehicle)
loop until typed data is valid
        UI --> VFM : requests data (checkupData, checkupKm)
    deactivate UI

    VFM -> UI : types requested data
    activate UI

        UI --> UI : validateDate(checkupDate)
        UI --> UI : validateCheckupKm(checkupKm)
end loop
        UI --> UI : KeepData(checkupDate, checkupKm)
        UI --> VFM : show all data and request confirmation
    deactivate UI

    VFM -> UI : confirms data
    activate UI

        UI -> CTRL : registerVehicleCheckup(vehicle, checkupDate, checkupKm)
        activate CTRL

            CTRL -> REPOS : getInstance()
            activate REPOS

                REPOS --> CTRL : repositories
            deactivate REPOS

            CTRL -> REPOSInstance : getCheckupRepository()
            activate REPOSInstance

                REPOSInstance --> CTRL : checkupRepository
            deactivate REPOSInstance

            CTRL -> CheckupREPO : registerVehicleCheckup(vehicle, checkupDate, checkupKm)
            activate CheckupREPO

                CheckupREPO -> Date** : new Date(checkupDate)
                    Date --> Date : validateDate(checkupDate)
                CheckupREPO -> Checkup** : new VehicleCheckup(vehicle, checkupDate, checkupKm)
                    Checkup --> Checkup : validateVehicle(vehicle)
                    Checkup --> Checkup : validateCheckupDate(checkupDate)
                    Checkup --> Checkup : validateCheckupKms(checkupKm)
                CheckupREPO --> CheckupREPO : add(checkup)
                CheckupREPO --> CheckupREPO : validateVehicleCheckup(checkup)
                CheckupREPO --> CTRL : checkup
            deactivate CheckupREPO

            CTRL --> UI : checkup
        deactivate CTRL

        UI --> VFM : display operation success
    deactivate UI

deactivate VFM

@enduml