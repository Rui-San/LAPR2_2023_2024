@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US028 - Sequence Diagram

autonumber

actor "Collaborator" as Collaborator
participant ":ListCollaboratorTasksUI" as UI
participant ":ListCollaboratorTasksController" as CTRL
participant ":AgendaRepository" as REPO
participant ":AgendaTaskDTO" as DTO
participant ":AgendaMapper" as Mapper
participant ":ApplicationSession" as AS
participant ":UserSession" as US
participant ":Email" as Email
participant ":Task" as Task
participant ":Workperiod" as Workperiod

activate Collaborator

    Collaborator -> UI :asks to show his agenda
    activate UI
    UI -> CTRL :getCollaboratorTasks()
    activate CTRL
    CTRL -> REPO:getCollaboratorSpecificAgenda()
    activate REPO
    REPO -> AS:getInstance()
    activate AS

    AS -> US:getCurrentSession()
    deactivate AS
    activate US
    US -> Email:getUserId()
    deactivate US
    activate Email
    Email -> REPO:User Email
    deactivate Email

    REPO -> CTRL: collaboratorTasks
    deactivate REPO
    CTRL -> Mapper: toDTOList(collaboratorTasks)

    activate Mapper
    Mapper -> DTO: collaboratorDTOtaskList
    deactivate Mapper

    activate DTO
    DTO -> CTRL: collaboratorDTOtaskList
    deactivate DTO
    CTRL -> UI: collaboratorDTOtaskList


    deactivate CTRL
    UI -> Collaborator: Displays the collaborator's specific agenda

    loop until the collaborator selects valid dates
    Collaborator -> UI: Filters the tasks between two dates(initialDate, finalDate)
    UI -> UI: validateDates(initialDate, FinalDate)
    end loop

    UI -> CTRL : getFilteredTasks(initialDate, finalDate)



    activate CTRL
        CTRL -> REPO:getCollaboratorSpecificAgenda()
        activate REPO
        REPO -> AS:getInstance()
        activate AS

        AS -> US:getCurrentSession()
        deactivate AS
        activate US
        US -> Email:getUserId()
        deactivate US
        activate Email
        Email -> REPO:User Email
        deactivate Email

        REPO -> CTRL: collaboratorTasks
        deactivate REPO
        CTRL -> Mapper: toDTOList(collaboratorTasks)

        activate Mapper
        Mapper -> DTO: collaboratorDTOtaskList
        deactivate Mapper

        activate DTO
        DTO -> CTRL: collaboratorDTOtaskList
        deactivate DTO
        loop for each task of the collaborator's agenda


        CTRL -> Task: getTaskWorkPeriod()
        activate Task
        Task -> Workperiod: isOverlap(initialDate, finalDate)
        deactivate Task
        alt the task work period overlaps with the selected dates interval
        activate Workperiod
        Workperiod -> Mapper: toDTO(task)
        deactivate Workperiod
        activate Mapper
        Mapper -> CTRL: addTask()
        deactivate Mapper
        end
        end loop
        CTRL -> UI: filteredTasks
        deactivate CTRL
        UI -> Collaborator: filteredTasks


@enduml