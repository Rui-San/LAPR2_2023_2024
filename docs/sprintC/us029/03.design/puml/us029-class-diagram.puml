@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0
title US029 - Class Diagram

package GUI <<Folder>> #DDDDDD {

class ListCollaboratorTasksUI {
    + ListCollaboratorTasksUI()
    + initialize(url, resourceBundle)
    + btnSetCompleted()
    + completeTask()
    - validateSelectedTask(selectedTask)
    - fillTaskList(collabAgenda)
    - updateTableView()
}

}

package Controller <<Folder>> #DDDDDD {
class ListCollaboratorTasksController {
    + ListCollaboratorTasksController()
    + getAgendaRepository()
    + getCollaboratorTasks()
}

class CompleteTaskController{
    + CompleteTaskController()
    - getAgendaRepository()
    - getTeamRepository()
    - getVehicleRepository()
    + completeTaskAgenda(selectedTask)
}

}

'package Domain <<Folder>> #AAAAAA{
package Repository <<Folder>> #DDDDDD {
class VehicleRepository{
    - List<Vehicle> vehicleList

    + removeWorkPeriodFromVehicle(completedTask, taskWorkPeriod)
   }

class AgendaRepository{
    - List<Task> agenda

    + getCollbaboratorSpecificAgenda(collaboratorEmail)
    + updateTaskToDone(title, greenSpaceName, workStartDate, status)
    }

class TeamRepository{
    - List<Team> teamList

    + removeWorkPeriodFromTeam(completedTask, taskWorkPeriod)

}

class Repositories {
    - Repositories()
    + getInstance() : Repositories
    + getVehicleRepository()
    + getAgendaRepository()
    + getTeamRepository()
}

class ApplicationSession{
    - ApplicationSession()
    + getInstance() : ApplicationSession
    + getAuthenticationRepository()
    + getCurrentSession()

}

class UserSession{
    + getUserEmail()

}

class Email{

}

}


package Domain <<Folder>> #DDDDDD {

class WorkPeriod{
    + Date workStartDate
    + int workStartHour
    + int workStartMin
    + Date workEndDate
    + int workEndHour
    + int workEndMin

}

class Team {
    - List<Collaborator> members
    + + removeWorkPeriodIfExists(oldWorkPeriod)

}

class Vehicle{
    + String plateId
    + String brand
    + String model
    + VehicleType type
    + double tare
    ...
    + removeWorkPeriodIfExists(oldWorkPeriod)
}

class Task {
    - String title;
    - String description;
    - TaskType taskType;
    - Status status;
    ...

    + Task(title, description, taskType, greenSpace,\nurgency, days, hours, minutes)
    (...)
}

class TaskDuration {
    - int days;
    - int hours;
    - int minutes;
    - int totalDurationMinutes;

    + TaskDuration(days, hours, minutes)
    + setTaskDuration(days, hours, minutes)
    - validateTaskDuration(days, hours, minutes)
}

'}
}


package Mapper <<Folder>> #DDDDDD {

class AgendaMapper{
    + AgendaMapper()
    + toDTO(task)
}

}

package DTO <<Folder>> #DDDDDD {

class AgendaTaskDTO {
    + String title;
    + String description;
    + TaskType taskType;
    + String greenSpaceName;
    + UrgencyType urgency;
    + int expectedDuration;
    + String workStartDate;
    + int workStartHour;
    + int workStartMinutes;
    + Status status;
    + String isTeamAssigned;

    + AgendaTaskDTO(title, description, taskType, greenSpace,\nurgency, expectedDuration, executionDate, workStartHour,\nworkStartMinutes, status, isTeamAssigned, vehiclesAssigned,\nteamDTO, vehicleDTOList)

}

class CollaboratorDTO{
    + String collaboratorName;
    + String email;
    + List<String> skillNames;

    + CollaboratorDTO(collaborator)

    }

class TeamDTO{
    + List<CollaboratorDTO> collaborators
    + TeamDTO(List<CollaboratorDTO> teamMembers)
    }

class VehicleDTO{
    + String plateID;
    + String brand;
    + String model;
    + String type;

    +VehicleDTO(vehicle)

}

}

ListCollaboratorTasksUI ..> ListCollaboratorTasksController
ListCollaboratorTasksUI ..> CompleteTaskController
ListCollaboratorTasksController ..> Repositories : repositories
CompleteTaskController ..> Repositories
Repositories --> Repositories : instance
ListCollaboratorTasksController ...> ApplicationSession
ApplicationSession --> ApplicationSession : instance
ApplicationSession -down-> "1" UserSession : userSession
UserSession ..> Email
Repositories  ---> TeamRepository
Repositories ---> VehicleRepository
Repositories ---> AgendaRepository
ListCollaboratorTasksController ...> AgendaRepository : agendaRepository
CompleteTaskController ...> AgendaRepository : agendaRepository
CompleteTaskController ...> VehicleRepository : vehicleRepository
CompleteTaskController ...> TeamRepository : teamRepository
ListCollaboratorTasksController ..> Mapper
AgendaMapper ..> AgendaTaskDTO
AgendaTaskDTO ..> "1"TeamDTO
TeamDTO "1" ..> CollaboratorDTO
AgendaTaskDTO "1" ..> VehicleDTO
VehicleRepository "1" -down-> Vehicle : vehicle
TeamRepository "1" -down-> Team : team
AgendaRepository "1" -down-> Task : task
Task *--"1" TaskDuration : taskDuration
Task *---"1" WorkPeriod : workPeriod
Vehicle "1" --> WorkPeriod : workPeriod
Team "1" ---> WorkPeriod : workPeriod


@enduml