    @startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US001 - Sequence Diagram

autonumber

actor "HRM" as Employee
participant ":RegisterSkillUI" as System
participant ":RegisterSkillController" as RSC
participant ":Repository" as REP
participant ":repositories \nRepositories" as REPS
participant ":skillRepository \nSkillRepository" as SR
participant ":Skill" as Skill

activate Employee

    Employee -> System : Asks to register a new skill
    activate System
loop until typed data is validated
        System --> Employee : Requests data (skill name)
    deactivate System

    Employee -> System : Types requested data
    activate System
    |||
    end

        System --> System : keepData(skillName)
        |||

        System --> Employee : Shows typed data and requests confirmation

    deactivate System

    Employee -> System : Confirms data and submits
    activate System
        System -> RSC : registerSkill(skillName)
        activate RSC

                RSC -> REP : getInstance()

                activate REP
                REP --> RSC : repositories
                deactivate REP
                RSC -> REPS : getSkillRepository()

                activate REPS
                REPS --> RSC : skillRepository
                deactivate REPS

                RSC -> SR : registerSkill(skillName)
                activate SR

                SR -> Skill** : new Skill(skillName)
                Skill --> Skill : validateSkill(skillName)

                |||
                |||


                SR --> SR : validateSkill(skill)



note right
Validate if this skill is
already in the skillList.

adds the skill if not.
end note

                SR --> SR : add(skill)
                |||

                SR --> RSC : operation success
                deactivate SR

            RSC --> System : operation success


        deactivate RSC

        System --> Employee : Displays operation success
        deactivate System

@enduml