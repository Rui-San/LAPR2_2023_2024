@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US021 - Sequence Diagram

autonumber

actor "GSM" as GSM
participant ":AddNewEntryToDoUI" as UI
participant "controller\n:AddNewEntryToDoController" as CTRL
participant ":Repositories" as REPO
participant "repositories\n:Repositories" as REPOInstance
participant "greenSpaceRepository\n:GreenSpaceRepository" as GreenSpaceREPO
participant ":GreenSpaceMapper" as GreenSpaceMapper
participant ":GreenSpaceDTO" as GreenSpaceDTO
participant ":ToDoListMapper" as ToDoListMapper
participant ":ToDoTaskDTO" as ToDoTaskDTO
participant "toDoRepository\n:ToDoRepository" as Todo
participant "Task" as Task
participant "task\n:Task" as TaskSet



activate GSM

    GSM -> UI : Asks to add a new entry on To-Do List
    activate UI

    UI -> CTRL : getGreenSpaceDTOlist()
    activate CTRL

        CTRL -> REPO : getInstance()
        activate REPO

            REPO --> CTRL : repositories
        deactivate REPO
        CTRL -> REPOInstance: getGreenSpaceRepository()

        activate REPOInstance

            REPOInstance --> CTRL : greenSpaceRepository
        deactivate REPOInstance

        CTRL -> GreenSpaceREPO : getGreenSpaceList()
        activate GreenSpaceREPO

        GreenSpaceREPO --> CTRL : greenSpaceList

        deactivate GreenSpaceREPO

        CTRL -> GreenSpaceMapper : toDTOlist(greenSpaceList)

        activate GreenSpaceMapper
loop for each greenSpace in greenSpaceList
            GreenSpaceMapper -> GreenSpaceDTO** : toDTO(greenSpace)

            note right of GreenSpaceDTO
                                GreenSpaceDTO contains the atributes:
                                - name
                                - type
                                - totalArea
                            end note
                            |||
            GreenSpaceMapper --> GreenSpaceMapper : add(greenSpaceDTO)

end loop
            GreenSpaceMapper --> CTRL : greenSpaceDTOlist



        deactivate GreenSpaceMapper









CTRL --> UI : greenSpaceDTOList
    deactivate CTRL


    loop until doesn't select a valid option
                    UI --> GSM : Shows list of green spaces and asks to select one
                deactivate UI

                GSM -> UI : Selects a green space

                activate UI
                |||
                end

            UI --> UI : keepData(greenspace)


    loop until typed data is validated

        UI --> GSM : Requests data (title, description, expected duration)
    deactivate UI

    GSM -> UI : Types requested data

    activate UI
    |||

    end

        UI --> UI : keepData(title, description, expectedDuration)
        |||

    loop until doesn't select a valid option
                        UI --> GSM : Shows list of task type and urgency and asks to select one
                    deactivate UI

                    GSM -> UI : Selects type of task and urgency
                    note right
                    Task type and urgency are
                    both enumerate types
                    end note
                    activate UI
                    |||
                    end

                UI --> UI : keepData(type, urgency)


        |||
        UI -> UI : new toDoTaskDTO(title, description, type,\ngreenSpace,urgency, expectedDuration)




                UI --> GSM : Shows all data and requests confirmation
deactivate UI
    GSM -> UI : Confirms data

    activate UI

    UI -> CTRL : registerTask(toDoTaskDTO)
    activate CTRL

        CTRL -> GreenSpaceREPO : getGreenSpaceByName(greenSpace)
        activate GreenSpaceREPO

            GreenSpaceREPO --> CTRL : greenSpace
        deactivate GreenSpaceREPO

        CTRL -> ToDoListMapper : toTask(toDoTaskDTO,greenSpace)

            activate ToDoListMapper

                ToDoListMapper -> Task ** : new Task(title, description, type,\ngreenSpace, urgency, expectedDuration)

            Task --> Task : validateTitle(title)
            Task --> Task : validateDescription(description)
            Task --> Task : validateType(type)
            Task --> Task : validateDuration(duration)
            Task --> Task : validateUrgency(urgency)

           |||
           deactivate Task

            ToDoListMapper --> ToDoListMapper : task

            ToDoListMapper --> CTRL : task
            deactivate ToDoListMapper

            CTRL -> REPO : getInstance()
                    activate REPO

                        REPO --> CTRL : repositories
                    deactivate REPO
                    CTRL -> REPOInstance: getToDoRepository()

                    activate REPOInstance

                        REPOInstance --> CTRL : toDoRepository
                    deactivate REPOInstance

                    CTRL -> Todo : registerTaskTodo(task)

                    activate Todo
                    |||
                    |||
                    Todo --> Todo : validateTaskToDo(task)
                    |||
                    Todo -> TaskSet** : setStatus(TODO_DEFAULT_STATUS)
                    note right of TaskSet
                    When a new task is created, the
                    status is "PENDING" by default,
                    until the task doesn't go the Agenda.
                    end note
                    Todo --> Todo : add(task)

                    Todo --> CTRL : operation success
                    deactivate Todo

            CTRL --> UI : operation success
            deactivate CTRL
        UI --> GSM : Displays operation success
    deactivate UI

@enduml